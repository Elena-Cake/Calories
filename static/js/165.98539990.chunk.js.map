{"version":3,"file":"static/js/165.98539990.chunk.js","mappings":"sLACA,GAAgB,QAAU,yBAAyB,eAAiB,iCCApE,EAAgC,kCAAhC,EAAuF,uCAAvF,EAAqJ,yC,mBCerJ,EAVmB,SAAH,GAAgC,IAA1BA,EAAI,EAAJA,KAAMC,EAAE,EAAFA,GAAIC,EAAQ,EAARA,SAC5B,OACI,gBAAKC,UAAWC,EAAkB,KAAOF,EAAWE,EAAyB,IAAI,UAC7E,SAAC,KAAO,CAACC,GAAI,YAAcJ,EAAIE,UAAWC,EAAqB,SAC1DJ,KAIjB,ECbA,EAAwF,gCCWxF,EARgB,SAAH,GAAqB,IAAfM,EAAO,EAAPA,QACf,OACI,gBAAKH,UAAWC,EAAiB,SAC5BE,GAGb,E,oBCuBMC,EAAc,SAAH,GAAyB,IAAnBC,EAAW,EAAXA,YACnB,OACI,gBAAKL,UAAWC,EAAAA,kBAAoB,UAChC,SAAC,KAAM,CACHK,cAAe,CACXH,QAAS,IAEbI,gBAAc,EACdC,SAAU,SAACC,GACPJ,EAAYI,EAAON,QACvB,EAAE,SAED,gBAAGM,EAAM,EAANA,OACAC,GADe,EAAPC,QACI,EAAZD,cAAcE,EAAU,EAAVA,WACdC,EAAO,EAAPA,QAASC,EAAY,EAAZA,aAAcC,EAAK,EAALA,MAAK,OAE5B,UAAC,KAAI,CAACP,SAAUM,EAAa,WACzB,SAAC,KAAK,CACFjB,KAAK,UACLmB,SAAUN,EACVO,OAAQL,EACRM,MAAOT,EAAON,QACdgB,YAAY,8BAChB,mBAAQC,UAAWP,IAAYE,EAAOM,KAAK,SAAQ,sEAChD,KAK3B,EAEA,EAvDgB,SAAH,GAA8C,IAAxCC,EAAW,EAAXA,YAAajB,EAAW,EAAXA,YAAakB,EAAM,EAANA,OACzC,GAAgCC,EAAAA,EAAAA,WAAS,GAAM,eAAxCzB,EAAQ,KAET0B,GAFsB,KAERH,EAAYI,YAAYC,KAAI,SAACC,EAAQC,GAAC,OAAK,SAAC,EAAU,CAAShC,KAAM+B,EAAO/B,KAAMC,GAAI8B,EAAO9B,GAAIC,SAAUA,GAA/C8B,EAA2D,KACrIC,EAAeR,EAAYS,aAAaJ,KAAI,SAACK,EAAGH,GAAC,OAAK,SAAC,EAAO,CAAS1B,QAAS6B,EAAE7B,SAAd0B,EAAyB,IAGnG,OAAKN,GAKD,iBAAKvB,UAAWC,EAAAA,QAAU,WACtB,gBAAKD,UAAWC,EAAAA,eAAiB,SAC5BwB,KAEL,iBAAKzB,UAAWC,EAAAA,kBAAoB,UAC/B6B,GACD,SAAC1B,EAAW,CAACC,YAAaA,WAV3B,SAAC,KAAQ,CAACH,GAAI,SAc7B,E,mBCTA,GAAe+B,E,QAAAA,KACbC,EAAAA,EAAAA,KAhBsB,SAACC,GACvB,MAAQ,CACNb,YAAaa,EAAMb,YAEvB,IAG2B,SAACc,GAC1B,MAAQ,CACN/B,YAAa,SAACF,GACZiC,GAASC,EAAAA,EAAAA,GAAmBlC,GAC9B,EAEJ,IAIEmC,EAAAA,EAFF,CAGEC,E","sources":["webpack://calorie/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://calorie/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://calorie/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__2aTXc\",\"dialogs__items\":\"Dialogs_dialogs__items__JyfsP\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogs__item\":\"DialogItem_dialogs__item__OUUKF\",\"dialogs__item_link\":\"DialogItem_dialogs__item_link__yrwVy\",\"dialogs__item_active\":\"DialogItem_dialogs__item_active__-17Cs\"};","import React, { useState } from \"react\";\r\nimport s from './DialogItem.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst DialogItem = ({ name, id, isActive }) => {\r\n    return (\r\n        <div className={s.dialogs__item + ' ' + (isActive ? s.dialogs__item_active : '')}>\r\n            <NavLink to={\"/dialogs/\" + id} className={s.dialogs__item_link}>\r\n                {name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"dialogs__messages\":\"Message_dialogs__messages__F2ql6\",\"messages__item\":\"Message_messages__item__K-7fI\"};","import React, { useState } from \"react\";\r\nimport s from './Message.module.css'\r\n\r\n\r\nconst Message = ({ message }) => {\r\n    return (\r\n        <div className={s.messages__item}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React, { useState } from \"react\";\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from \"./Message/Message\";\nimport { Navigate } from \"react-router-dom\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\n\n\n\nconst Dialogs = ({ dialogsPage, sendMessage, isAuth }) => {\n    const [isActive, setIsActive] = useState(false)\n\n    const dialogsElem = dialogsPage.dialogsData.map((dialog, i) => <DialogItem key={i} name={dialog.name} id={dialog.id} isActive={isActive} />)\n    const messagesElem = dialogsPage.messagesData.map((m, i) => <Message key={i} message={m.message} />)\n\n\n    if (!isAuth) {\n        return <Navigate to={'login'} />\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogs__items}>\n                {dialogsElem}\n            </div>\n            <div className={s.dialogs__messages}>\n                {messagesElem}\n                <MessageForm sendMessage={sendMessage} />\n            </div>\n        </div>\n    )\n}\n\nconst MessageForm = ({ sendMessage }) => {\n    return (\n        <div className={s.dialogs__messages}>\n            <Formik\n                initialValues={{\n                    message: '',\n                }}\n                validateOnBlur\n                onSubmit={(values) => {\n                    sendMessage(values.message)\n                }}\n            >\n                {({ values, touched,\n                    handleChange, handleBlur,\n                    isValid, handleSubmit, dirty }) => (\n\n                    <Form onSubmit={handleSubmit}>\n                        <Field\n                            name='message'\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.message}\n                            placeholder=\"What do your wonna send?\" />\n                        <button disabled={!isValid && !dirty} type=\"submit\">Отправить</button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    )\n}\n\nexport default Dialogs;","import { sendMessageCreator } from '../../redux/dialogsReduser'\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { AuthRedirect } from \"../hoc/AuthRedirect\";\nimport { compose } from \"redux\";\n\n\nconst mapStateToProps = (state) => {\n  return ({\n    dialogsPage: state.dialogsPage\n  })\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n  return ({\n    sendMessage: (message) => {\n      dispatch(sendMessageCreator(message))\n    }\n  })\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  AuthRedirect\n)(Dialogs);"],"names":["name","id","isActive","className","s","to","message","MessageForm","sendMessage","initialValues","validateOnBlur","onSubmit","values","handleChange","touched","handleBlur","isValid","handleSubmit","dirty","onChange","onBlur","value","placeholder","disabled","type","dialogsPage","isAuth","useState","dialogsElem","dialogsData","map","dialog","i","messagesElem","messagesData","m","compose","connect","state","dispatch","sendMessageCreator","AuthRedirect","Dialogs"],"sourceRoot":""}