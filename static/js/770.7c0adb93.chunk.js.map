{"version":3,"file":"static/js/770.7c0adb93.chunk.js","mappings":"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","sources":["webpack://calorie/./src/components/Users/Users.module.css?b9d0","webpack://calorie/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.jsx","webpack://calorie/./src/components/Users/User/User.module.css?cfea","components/Users/User/User.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"user__card\":\"Users_user__card__7DYFP\",\"user__foto\":\"Users_user__foto__AW7WS\"};","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Paginator_pagination__tsAm4\",\"pagination__btn\":\"Paginator_pagination__btn__9s5W3\",\"pagination__btn_type_active\":\"Paginator_pagination__btn_type_active__0kTh6\"};","import React, { useState } from \"react\";\nimport s from './Paginator.module.css'\n\nconst Paginator = ({ currentPage, onChangePage, totalUserCount, pageSize, portionSize = 10 }) => {\n\n    const pageCount = Math.ceil(totalUserCount / pageSize)\n\n    const portionCount = Math.ceil(pageCount / portionSize)\n    const [currentPortion, setCurrentPortion] = useState(1)\n    let leftPortionPageNumber = (currentPortion - 1) * portionSize + 1;\n    let rightPortionPageNumber = currentPortion * portionSize;\n\n    const pagesCounterEmpty = []\n    for (let i = 1; i <= pageCount; i++) {\n        pagesCounterEmpty.push(i)\n    }\n\n    const pagesElements = pagesCounterEmpty.map(i => {\n        if (i >= leftPortionPageNumber && i <= rightPortionPageNumber) {\n            return (\n                <div key={i} className={`${s.pagination__btn} ${currentPage === i && s.pagination__btn_type_active}`}\n                    onClick={(e) => onChangePage(i)}>\n                    {i}\n                </div>\n            )\n        }\n    })\n\n    const onPrevClick = () => {\n        setCurrentPortion(currentPortion - 1)\n    }\n\n    const onNextClick = () => {\n        setCurrentPortion(currentPortion + 1)\n    }\n\n    return (\n        <div className={s.pagination}>\n            {currentPortion > 1 &&\n                <button onClick={onPrevClick}>prev</button>\n            }\n            {pagesElements}\n            {currentPortion <= portionCount &&\n                <button onClick={onNextClick}>next</button>\n            }\n        </div>\n    )\n}\n\nexport default Paginator;\n","// extracted by mini-css-extract-plugin\nexport default {\"user__card\":\"User_user__card__n6u72\",\"user__foto\":\"User_user__foto__fLNDs\",\"user__name\":\"User_user__name__qWvvM\",\"user__status\":\"User_user__status__Cyc4Z\",\"user__location\":\"User_user__location__W2RlD\",\"user__text\":\"User_user__text__RX70o\"};","import React from \"react\";\nimport s from './User.module.css'\nimport { NavLink } from \"react-router-dom\";\n\nimport userPhoto from '../../../images/ava.png'\n\nconst User = ({ user, handleFollow, followingInProgress }) => {\n    console.log();\n    return (\n        <div className={s.user__card}>\n            <NavLink to={'/profile/' + user.id}>\n                <img className={s.user__foto} src={user.photos.small !== null ? user.photos.small : userPhoto} alt=\"\" />\n            </NavLink>\n            <button disabled={followingInProgress.some(id => id === user.id)}\n                className={s.user__btnFollow}\n                onClick={() => { handleFollow(user.followed, user.id) }}>\n                {user.followed ? 'unfollow' : 'follow'}\n            </button>\n            <h2 className={s.user__name}>{user.name}</h2>\n            <p className={`${s.user__status} ${s.user__text}`}>{user.status}</p>\n            <div className={s.user__location}>\n                <p className={s.user__text}>Russia</p>\n                <p className={s.user__text}>Moscow</p>\n            </div>\n        </div>\n    )\n}\n\nexport default User;\n","// чистая компонента\n\nimport React from \"react\";\nimport s from './Users.module.css';\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User/User\";\n\nlet Users = ({ users, follow, unfollow, currentPage, onChangePage,\n    followingInProgress, totalUserCount, pageSize }) => {\n    const handleFollow = (isFollowed, userId) => {\n        isFollowed ?\n            unfollow(userId)\n            :\n            follow(userId);\n    }\n\n    const usersElements = users.map(u => {\n        return (\n            <User key={u.id} user={u} handleFollow={handleFollow} followingInProgress={followingInProgress} />\n        )\n    })\n    return (\n        <div>\n            <Paginator currentPage={currentPage} onChangePage={onChangePage} totalUserCount={totalUserCount} pageSize={pageSize} />\n            <div className={s.users}>\n                {usersElements}\n            </div>\n        </div >\n    )\n}\n\nexport default Users;","// контейнернаяя компонента для общения с store и API\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { follow, unfollow, setCurrPage, getUsers } from \"../../redux/usersReduser\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { compose } from \"redux\";\n\n\n// контейнернаяя компонента для общения с API\nlet UsersAPIComponent = ({ users, follow, unfollow,\n    setCurrPage, pageSize, totalUserCount,\n    currentPage, isFetching, getUsers,\n    toggleFollowingProgress, followingInProgress }) => {\n\n\n    const onChangePage = (pageNumber) => {\n        setCurrPage(pageNumber)\n        getUsers(pageNumber, pageSize)\n    }\n\n    useEffect(() => {\n        getUsers(currentPage, pageSize)\n    }, [])\n\n    return (\n        <>\n            <Preloader isFetching={isFetching} />\n            <Users\n                users={users}\n                follow={follow}\n                unfollow={unfollow}\n                totalUserCount={totalUserCount}\n\n                pageSize={pageSize}\n                currentPage={currentPage}\n                onChangePage={onChangePage}\n                followingInProgress={followingInProgress} />\n        </>\n    )\n}\n\n\n// контейнернаяя компонента для общения с store\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUserCount: state.usersPage.totalUserCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { follow, unfollow, setCurrPage, getUsers })\n)(UsersAPIComponent)\n\n"],"names":["currentPage","onChangePage","totalUserCount","pageSize","portionSize","pageCount","Math","ceil","portionCount","useState","currentPortion","setCurrentPortion","leftPortionPageNumber","rightPortionPageNumber","pagesCounterEmpty","i","push","pagesElements","map","className","s","onClick","e","user","handleFollow","followingInProgress","console","log","to","id","src","photos","small","alt","disabled","some","followed","name","status","users","follow","unfollow","isFollowed","userId","usersElements","u","compose","connect","state","usersPage","isFetching","setCurrPage","getUsers","toggleFollowingProgress","useEffect","Preloader","pageNumber"],"sourceRoot":""}